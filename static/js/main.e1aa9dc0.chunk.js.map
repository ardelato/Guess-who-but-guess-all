{"version":3,"sources":["components/Jumbotron/index.js","components/Nav/index.js","components/Grid/index.js","components/ImageCard/index.js","controller/imageController.js","App.js","index.js"],"names":["Jumbotron","className","Nav","props","score","topScore","Container","fluid","children","Row","Col","size","split","map","join","ImageCard","handleClick","event","clickCB","scoreCB","target","getAttribute","parentElement","Card","onClick","handleChecked","scoreChange","value","this","imageObj","src","Img","variant","Component","ImageLayout","state","imageCards","checked","srcID","index","findIndex","obj","resetImages","tempArray","setState","randomizeImages","images","forEach","image","sort","Math","random","App","status","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1aa9dc0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron text-center\">\n      <h1>Guess who!</h1>\n\n      <br />\n      <h3>Instructions:</h3>\n      <h5>\n        Click on an image that has not been clicked. <br />\n        If it has not been clicked you will get 1 point, otherwise your score\n        will reset.\n      </h5>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n//Need to import score\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <ul>\n        <li>Guess Them All!</li>\n        <li>Click an image to begin!</li>\n        <li>\n          Score: {props.score} | Top Score: {props.topScore}\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./style.css\";\r\n\r\nclass ImageCard extends Component {\r\n  handleClick = (event, clickCB, scoreCB) => {\r\n    let domTarget =\r\n      event.target.getAttribute(\"class\") === \"card\"\r\n        ? event.target\r\n        : event.target.parentElement;\r\n    clickCB(domTarget.getAttribute(\"value\"), scoreCB);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        onClick={event =>\r\n          this.handleClick(\r\n            event,\r\n            this.props.handleChecked,\r\n            this.props.scoreChange\r\n          )\r\n        }\r\n        value={this.props.imageObj.src}\r\n      >\r\n        <Card.Img variant=\"top\" src={this.props.imageObj.src} />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport ImageCard from \"../components/ImageCard\";\r\n\r\nclass ImageLayout extends Component {\r\n  state = {\r\n    imageCards: [\r\n      { src: \"./images/dinosaur-1.png\", checked: false },\r\n      { src: \"./images/dinosaur-2.png\", checked: false },\r\n      { src: \"./images/dinosaur-3.png\", checked: false },\r\n      { src: \"./images/dinosaur-4.png\", checked: false },\r\n      { src: \"./images/dinosaur-5.png\", checked: false },\r\n      { src: \"./images/dinosaur-6.png\", checked: false },\r\n      { src: \"./images/dinosaur-7.png\", checked: false },\r\n      { src: \"./images/dinosaur-8.png\", checked: false },\r\n      { src: \"./images/dinosaur-9.png\", checked: false },\r\n      { src: \"./images/dinosaur-10.png\", checked: false },\r\n      { src: \"./images/dinosaur-11.png\", checked: false },\r\n      { src: \"./images/dinosaur-12.png\", checked: false }\r\n    ]\r\n  };\r\n\r\n  handleChecked = (srcID, scoreCB) => {\r\n    let index = this.state.imageCards.findIndex(obj => obj.src === srcID);\r\n    if (this.state.imageCards[index].checked) {\r\n      this.resetImages();\r\n      scoreCB(true);\r\n    } else {\r\n      let tempArray = this.state.imageCards;\r\n      tempArray[index].checked = true;\r\n      this.setState({ imageCards: tempArray });\r\n      this.randomizeImages();\r\n      scoreCB(false);\r\n    }\r\n  };\r\n\r\n  resetImages = () => {\r\n    let images = this.state.imageCards;\r\n    images.forEach(image => {\r\n      image.checked = false;\r\n    });\r\n    this.setState({ imageCards: images });\r\n    this.randomizeImages();\r\n  };\r\n\r\n  randomizeImages = () => {\r\n    let tempArray = this.state.imageCards.sort(() => Math.random() - 0.5);\r\n    this.setState({\r\n      imageCards: tempArray\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[0]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[1]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[2]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[3]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[4]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[5]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[6]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[7]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[8]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[9]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[10]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n          <Col size=\"md-12\">\r\n            <ImageCard\r\n              imageObj={this.state.imageCards[11]}\r\n              scoreChange={this.props.scoreChange}\r\n              handleChecked={this.handleChecked}\r\n            ></ImageCard>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageLayout;\r\n","import React from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport ImageLayout from \"./controller/imageController\";\n\nclass App extends React.Component {\n  state = {\n    score: 0,\n    topScore: 0\n  };\n\n  scoreChange = status => {\n    if (status) {\n      this.setState({ score: 0 });\n    } else {\n      this.setState({\n        score: this.state.score + 1,\n        topScore:\n          this.state.score + 1 > this.state.topScore\n            ? this.state.score + 1\n            : this.state.topScore\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav score={this.state.score} topScore={this.state.topScore} />\n        <Jumbotron />\n        <ImageLayout scoreChange={this.scoreChange} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}